name: Test code, update coverage, and release master branch

on: [ push, pull_request ]

jobs:
  test:
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest ]
        java: [ '11', '17', '21' ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup JDK
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: ${{ matrix.java }}
    - name: Setup sbt launcher
      uses: sbt/setup-sbt@v1.1.7
    - name: Run tests
      shell: bash
      run: sbt +test
  coverage:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup JDK
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 21
    - name: Setup sbt launcher
      uses: sbt/setup-sbt@v1.1.7
    - name: Analyze coverage
      run: sbt clean coverage +test
    - name: Update coverage report 
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COVERALLS_FLAG_NAME: Scala ${{ matrix.scala }}
      run: sbt coverageReport coveralls
  release:
    runs-on: ubuntu-latest
    needs: [ test, coverage ]
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Check if we are head of master 
      id: check_head_of_master
      run: |
        git fetch origin master &&
        MASTER=`git rev-parse origin/master` &&
        echo "::set-output name=head_of_master::$MASTER" &&
        CURRENT=`git rev-list -n 1 ${{ github.ref }} || echo "NOT_MASTER"` &&
        echo "::set-output name=current_job_ref::$CURRENT"
    - name: Set up JDK
      if: steps.check_head_of_master.outputs.head_of_master == steps.check_head_of_master.outputs.current_job_ref
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 21
    - name: Set up SBT
      if: steps.check_head_of_master.outputs.head_of_master == steps.check_head_of_master.outputs.current_job_ref
      uses: sbt/setup-sbt@v1.1.7 
    - name: Build and release
      if: steps.check_head_of_master.outputs.head_of_master == steps.check_head_of_master.outputs.current_job_ref
      env:
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        SONA_USER: ${{ secrets.SONATYPE_USERNAME }}
        SONA_PASS: ${{ secrets.SONATYPE_PASSWORD }}
        GPG_PRIVATE: ${{ secrets.GPG_PRIVATE }}
        PGP_PASS: ${{ secrets.PGP_PASS }}
        CI: github
      run: |
        git fetch --prune --unshallow --tags &&
        export GPG_TTY=$(tty) &&
        echo $GPG_PRIVATE | base64 -d | gpg --passphrase=$PGP_PASS --yes --batch --pinentry-mode loopback --import &&
        export PATH=`pwd`/.github/bin:$PATH &&
        sbt + test ciReleaseTagNextVersion ciReleaseSonatype

